@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.AspNetCore.Components.WebAssembly.Hosting
@using Microsoft.Extensions.Logging 

@inject ILogger<LoginDisplay> logger
@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>
        Hello, @context.User.Identity.Name! 
        - @context.User.Claims.Count()
        - - 
        @if (context.User.Claims.Count() > 0)
        {
            <ul>
                @foreach (var claim in context.User.Claims)
                {
                    <li>@claim.Type: @claim.Value</li>
                }
            </ul>
        }
        <button class="nav-link btn btn-link" @onclick="BeginLogout">Log out</button>
    </Authorized>
    <NotAuthorized>
        <a href="authentication/login">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code{
    private async Task BeginLogout(MouseEventArgs args)
    {
        logger.LogInformation($"Logging out: something");
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

    //logger.LogInformation($"Name: {context.User.Identity.Name}");
}
